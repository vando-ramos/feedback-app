{"ast":null,"code":"import { reactive, onMounted, onBeforeUnmount, defineAsyncComponent } from 'vue';\nimport useModal from '../../hooks/useModal';\nconst ModalLogin = defineAsyncComponent(() => import('../modalLogin'));\nconst DEFAULT_WIDTH = 'w-3/4 lg:w-1/3';\nexport default {\n  components: {\n    ModalLogin\n  },\n  setup() {\n    const modal = useModal();\n    const state = reactive({\n      isActive: false,\n      component: {},\n      props: {},\n      width: DEFAULT_WIDTH\n    });\n    onMounted(() => {\n      modal.listen(handleModalToggle);\n    });\n    onBeforeUnmount(() => {\n      modal.off(handleModalToggle);\n    });\n    function handleModalToggle(payload) {\n      if (payload.status) {\n        state.component = payload.component;\n        state.props = payload.props;\n        state.width = payload.width ?? DEFAULT_WIDTH;\n      } else {\n        state.component = {};\n        state.props = {};\n        state.width = DEFAULT_WIDTH;\n      }\n    }\n    return {\n      state,\n      handleModalToggle\n    };\n  }\n};","map":{"version":3,"names":["reactive","onMounted","onBeforeUnmount","defineAsyncComponent","useModal","ModalLogin","DEFAULT_WIDTH","components","setup","modal","state","isActive","component","props","width","listen","handleModalToggle","off","payload","status"],"sources":["/home/vando/vue-br/feedback-app/src/components/modalFactory/index.vue"],"sourcesContent":["<template>\n  <teleport to='body'>\n    <div \n      v-if=\"state.isActive\" \n      class=\"fixed top-0 left-0 z-50 flex items-center justify-center w-full h-full bg-black bg-opacity-50\" \n      @click=\"handleModalToggle({ status: false })\"\n    >\n      <div class=\"fixed mx-10\" :class=\"state.width\">\n        <div class=\"flex flex-col overflow-hidden bg-white rounded-lg animate__animated animate__fadeInDown animate__faster\">\n          <div class=\"flex flex-col px-12 py-10 bg-white\">\n            <component :is=\"state.component\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  </teleport>\n</template>\n\n<script>\nimport { reactive, onMounted, onBeforeUnmount, defineAsyncComponent } from 'vue'\nimport useModal from '../../hooks/useModal'\n\nconst ModalLogin = defineAsyncComponent(() => import('../modalLogin'))\n\nconst DEFAULT_WIDTH = 'w-3/4 lg:w-1/3'\n\nexport default {\n  components: {\n    ModalLogin\n  },\n  setup() {\n    const modal = useModal()\n    const state = reactive({\n      isActive: false,\n      component: {},\n      props: {},\n      width: DEFAULT_WIDTH\n    })\n\n    onMounted(() => {\n      modal.listen(handleModalToggle)\n    })\n\n    onBeforeUnmount(() => {\n      modal.off(handleModalToggle)\n    })\n\n    function handleModalToggle(payload) {\n      if(payload.status) {\n        state.component = payload.component\n        state.props = payload.props\n        state.width = payload.width ?? DEFAULT_WIDTH\n      } else {\n        state.component = {}\n        state.props = {}\n        state.width = DEFAULT_WIDTH\n      }\n    }\n\n    return {\n      state,\n      handleModalToggle\n    }\n  }\n}\n</script>\n"],"mappings":"AAmBA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,eAAe,EAAEC,oBAAmB,QAAS,KAAI;AAC/E,OAAOC,QAAO,MAAO,sBAAqB;AAE1C,MAAMC,UAAS,GAAIF,oBAAoB,CAAC,MAAM,MAAM,CAAC,eAAe,CAAC;AAErE,MAAMG,aAAY,GAAI,gBAAe;AAErC,eAAe;EACbC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIL,QAAQ,CAAC;IACvB,MAAMM,KAAI,GAAIV,QAAQ,CAAC;MACrBW,QAAQ,EAAE,KAAK;MACfC,SAAS,EAAE,CAAC,CAAC;MACbC,KAAK,EAAE,CAAC,CAAC;MACTC,KAAK,EAAER;IACT,CAAC;IAEDL,SAAS,CAAC,MAAM;MACdQ,KAAK,CAACM,MAAM,CAACC,iBAAiB;IAChC,CAAC;IAEDd,eAAe,CAAC,MAAM;MACpBO,KAAK,CAACQ,GAAG,CAACD,iBAAiB;IAC7B,CAAC;IAED,SAASA,iBAAiBA,CAACE,OAAO,EAAE;MAClC,IAAGA,OAAO,CAACC,MAAM,EAAE;QACjBT,KAAK,CAACE,SAAQ,GAAIM,OAAO,CAACN,SAAQ;QAClCF,KAAK,CAACG,KAAI,GAAIK,OAAO,CAACL,KAAI;QAC1BH,KAAK,CAACI,KAAI,GAAII,OAAO,CAACJ,KAAI,IAAKR,aAAY;MAC7C,OAAO;QACLI,KAAK,CAACE,SAAQ,GAAI,CAAC;QACnBF,KAAK,CAACG,KAAI,GAAI,CAAC;QACfH,KAAK,CAACI,KAAI,GAAIR,aAAY;MAC5B;IACF;IAEA,OAAO;MACLI,KAAK;MACLM;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}