{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useField } from 'vee-validate';\nimport { useToast } from 'vue-toastification';\nimport useModal from '../../hooks/useModal';\nimport icon from '../icon';\nimport { validateEmptyAndLength3, validateEmptyAndEmail } from '../../utils/validators';\nimport services from '../../services';\nexport default {\n  components: {\n    icon\n  },\n  setup() {\n    const router = useRouter();\n    const modal = useModal();\n    const toast = useToast();\n    const {\n      value: emailValue,\n      errorMessage: emailErrorMessage\n    } = useField('email', validateEmptyAndEmail);\n    const {\n      value: passwordValue,\n      errorMessage: passwordErrorMessage\n    } = useField('password', validateEmptyAndLength3);\n    const state = reactive({\n      hasErrors: false,\n      isLoading: false,\n      name: {\n        value: nameValue,\n        errorMessage: nameErrorMessage\n      },\n      email: {\n        value: emailValue,\n        errorMessage: emailErrorMessage\n      },\n      password: {\n        value: passwordValue,\n        errorMessage: passwordErrorMessage\n      }\n    });\n    async function handleSubmit() {\n      try {\n        toast.clear();\n        state.isLoading = true;\n        const {\n          data,\n          errors\n        } = await services.auth.login({\n          email: state.email.value,\n          password: state.password.value\n        });\n        if (!errors) {\n          window.localStorage.setItem('token', data.token);\n          state.isLoading = false;\n          router.push({\n            name: 'feedbacks'\n          });\n          state.isLoading = false;\n          modal.close();\n          return;\n        }\n        if (errors.status === 404) {\n          toast.error('Email not found!');\n        }\n        if (errors.status === 401) {\n          toast.error('Invalid email or password!');\n        }\n        if (errors.status === 400) {\n          toast.error('Login error!');\n        }\n        state.isLoading = false;\n      } catch (error) {\n        state.isLoading = false;\n        state.hasErrors = !!error;\n        toast.error('Login error!');\n      }\n    }\n    return {\n      state,\n      close: modal.close,\n      handleSubmit\n    };\n  }\n};","map":{"version":3,"names":["reactive","useRouter","useField","useToast","useModal","icon","validateEmptyAndLength3","validateEmptyAndEmail","services","components","setup","router","modal","toast","value","emailValue","errorMessage","emailErrorMessage","passwordValue","passwordErrorMessage","state","hasErrors","isLoading","name","nameValue","nameErrorMessage","email","password","handleSubmit","clear","data","errors","auth","login","window","localStorage","setItem","token","push","close","status","error"],"sources":["/home/vando/vue-br/feedback-app/src/components/modalSignup/index.vue"],"sourcesContent":["<template>\n  <div class=\"flex justify-between\">\n    <h1 class=\"text-4xl font-black text-gray-800\">\n      Sign up\n    </h1>\n\n    <button @click=\"close\" class=\"text-4xl text-gray-600 focus:outline-none\">\n      &times;\n    </button>\n  </div>\n\n  <div class=\"mt-16\">\n    <form @submit.prevent=\"handleSubmit\">\n      <label class=\"block\">\n        <span class=\"text-lg font-medium text-gray-800\">Name</span>\n        <input v-model=\"state.name.value\" type=\"email\" :class=\"{'border-brand-danger': !!state.name.errorMessage}\"\n          class=\"block w-full px-4 py-3 mt-1 text-lg bg-gray-100 border-2 border-transparent rounded\" placeholder=\"Enter your name\"\n        >\n        <span v-if=\"!!state.name.errorMessage\" class=\"block font-medium text-brand-danger\">\n          {{ state.name.errorMessage }}\n        </span>\n      </label>\n\n      <label class=\"block mt-9\">\n        <span class=\"text-lg font-medium text-gray-800\">Email</span>\n        <input v-model=\"state.email.value\" type=\"email\" :class=\"{'border-brand-danger': !!state.email.errorMessage}\"\n          class=\"block w-full px-4 py-3 mt-1 text-lg bg-gray-100 border-2 border-transparent rounded\" placeholder=\"email@email.com\"\n        >\n        <span v-if=\"!!state.email.errorMessage\" class=\"block font-medium text-brand-danger\">\n          {{ state.email.errorMessage }}\n        </span>\n      </label>\n\n      <label class=\"block mt-9\">\n        <span class=\"text-lg font-medium text-gray-800\">Password</span>\n        <input v-model=\"state.password.value\" type=\"password\" :class=\"{'border-brand-danger': !!state.email.errorMessage}\"\n          class=\"block w-full px-4 py-3 mt-1 text-lg bg-gray-100 border-2 border-transparent rounded\" placeholder=\"Enter Password\"\n        >\n        <span v-if=\"!!state.password.errorMessage\" class=\"block font-medium text-brand-danger\">\n          {{ state.password.errorMessage }}\n        </span>\n      </label>\n\n      <button :disabled=\"state.isLoading\" type=\"submit\" :class=\"{'opacity-50': state.isLoading}\"\n        class=\"px-8 py-3 mt-10 text-2xl font-bold text-white rounded-full bg-brand-main focus:outline-none transition-all duration-150\"\n      >\n        <icon v-if=\"state.isLoading\" name='loading' class=\"animate-spin\" />\n        <span v-else>Log in</span>\n      </button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { reactive } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useField } from 'vee-validate'\nimport { useToast } from 'vue-toastification'\nimport useModal from '../../hooks/useModal'\nimport icon from '../icon'\nimport { validateEmptyAndLength3, validateEmptyAndEmail } from '../../utils/validators'\nimport services from '../../services'\n\nexport default {\n  components: { icon },\n  setup () {\n    const router = useRouter()\n    const modal = useModal()\n    const toast = useToast()\n\n    const {\n      value: emailValue,\n      errorMessage: emailErrorMessage\n    } = useField('email', validateEmptyAndEmail)\n\n    const {\n      value: passwordValue,\n      errorMessage: passwordErrorMessage\n    } = useField('password', validateEmptyAndLength3)\n\n    const state = reactive({\n      hasErrors: false,\n      isLoading: false,\n      name: {\n        value: nameValue,\n        errorMessage: nameErrorMessage\n      },\n      email: {\n        value: emailValue,\n        errorMessage: emailErrorMessage\n      },\n      password: {\n        value: passwordValue,\n        errorMessage: passwordErrorMessage\n      }\n    })\n\n    async function handleSubmit () {\n      try {\n        toast.clear()\n        state.isLoading = true\n        const { data, errors } = await services.auth.login({\n          email: state.email.value,\n          password: state.password.value\n        })\n\n        if (!errors) {\n          window.localStorage.setItem('token', data.token)\n          state.isLoading = false\n          router.push({ name: 'feedbacks' })\n          state.isLoading = false\n          modal.close()\n          return\n        }\n\n        if (errors.status === 404) {\n          toast.error('Email not found!')\n        }\n\n        if (errors.status === 401) {\n          toast.error('Invalid email or password!')\n        }\n\n        if (errors.status === 400) {\n          toast.error('Login error!')\n        }\n\n        state.isLoading = false\n      } catch (error) {\n        state.isLoading = false\n        state.hasErrors = !!error\n        toast.error('Login error!')\n      }\n    }\n\n    return {\n      state,\n      close: modal.close,\n      handleSubmit\n    }\n  }\n}\n</script>\n"],"mappings":";AAsDA,SAASA,QAAO,QAAS,KAAI;AAC7B,SAASC,SAAQ,QAAS,YAAW;AACrC,SAASC,QAAO,QAAS,cAAa;AACtC,SAASC,QAAO,QAAS,oBAAmB;AAC5C,OAAOC,QAAO,MAAO,sBAAqB;AAC1C,OAAOC,IAAG,MAAO,SAAQ;AACzB,SAASC,uBAAuB,EAAEC,qBAAoB,QAAS,wBAAuB;AACtF,OAAOC,QAAO,MAAO,gBAAe;AAEpC,eAAe;EACbC,UAAU,EAAE;IAAEJ;EAAK,CAAC;EACpBK,KAAIA,CAAA,EAAK;IACP,MAAMC,MAAK,GAAIV,SAAS,CAAC;IACzB,MAAMW,KAAI,GAAIR,QAAQ,CAAC;IACvB,MAAMS,KAAI,GAAIV,QAAQ,CAAC;IAEvB,MAAM;MACJW,KAAK,EAAEC,UAAU;MACjBC,YAAY,EAAEC;IAChB,IAAIf,QAAQ,CAAC,OAAO,EAAEK,qBAAqB;IAE3C,MAAM;MACJO,KAAK,EAAEI,aAAa;MACpBF,YAAY,EAAEG;IAChB,IAAIjB,QAAQ,CAAC,UAAU,EAAEI,uBAAuB;IAEhD,MAAMc,KAAI,GAAIpB,QAAQ,CAAC;MACrBqB,SAAS,EAAE,KAAK;MAChBC,SAAS,EAAE,KAAK;MAChBC,IAAI,EAAE;QACJT,KAAK,EAAEU,SAAS;QAChBR,YAAY,EAAES;MAChB,CAAC;MACDC,KAAK,EAAE;QACLZ,KAAK,EAAEC,UAAU;QACjBC,YAAY,EAAEC;MAChB,CAAC;MACDU,QAAQ,EAAE;QACRb,KAAK,EAAEI,aAAa;QACpBF,YAAY,EAAEG;MAChB;IACF,CAAC;IAED,eAAeS,YAAWA,CAAA,EAAK;MAC7B,IAAI;QACFf,KAAK,CAACgB,KAAK,CAAC;QACZT,KAAK,CAACE,SAAQ,GAAI,IAAG;QACrB,MAAM;UAAEQ,IAAI;UAAEC;QAAO,IAAI,MAAMvB,QAAQ,CAACwB,IAAI,CAACC,KAAK,CAAC;UACjDP,KAAK,EAAEN,KAAK,CAACM,KAAK,CAACZ,KAAK;UACxBa,QAAQ,EAAEP,KAAK,CAACO,QAAQ,CAACb;QAC3B,CAAC;QAED,IAAI,CAACiB,MAAM,EAAE;UACXG,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEN,IAAI,CAACO,KAAK;UAC/CjB,KAAK,CAACE,SAAQ,GAAI,KAAI;UACtBX,MAAM,CAAC2B,IAAI,CAAC;YAAEf,IAAI,EAAE;UAAY,CAAC;UACjCH,KAAK,CAACE,SAAQ,GAAI,KAAI;UACtBV,KAAK,CAAC2B,KAAK,CAAC;UACZ;QACF;QAEA,IAAIR,MAAM,CAACS,MAAK,KAAM,GAAG,EAAE;UACzB3B,KAAK,CAAC4B,KAAK,CAAC,kBAAkB;QAChC;QAEA,IAAIV,MAAM,CAACS,MAAK,KAAM,GAAG,EAAE;UACzB3B,KAAK,CAAC4B,KAAK,CAAC,4BAA4B;QAC1C;QAEA,IAAIV,MAAM,CAACS,MAAK,KAAM,GAAG,EAAE;UACzB3B,KAAK,CAAC4B,KAAK,CAAC,cAAc;QAC5B;QAEArB,KAAK,CAACE,SAAQ,GAAI,KAAI;MACxB,EAAE,OAAOmB,KAAK,EAAE;QACdrB,KAAK,CAACE,SAAQ,GAAI,KAAI;QACtBF,KAAK,CAACC,SAAQ,GAAI,CAAC,CAACoB,KAAI;QACxB5B,KAAK,CAAC4B,KAAK,CAAC,cAAc;MAC5B;IACF;IAEA,OAAO;MACLrB,KAAK;MACLmB,KAAK,EAAE3B,KAAK,CAAC2B,KAAK;MAClBX;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}